oryx:
  leanrepo:
    settings:
      groupId: 069fbb9b-167c-4ff9-bc74-d60dc3747adf
      schemaName: service
      schema: |
        {
          "$id": "https://oryx-gateway.net/schemas/Service",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Service",
          "type": "object",
          "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
          "required": ["serviceSpecification", "@type"],
          "properties": {
            "id": {
              "description": "unique identifier (UUID)",
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
            },
            "href": {
              "description": "Hyperlink reference",
              "type": "string",
              "readOnly": true,
              "format": "uri"
            },
            "category": {
              "type": "string",
              "description": "Is it a customer facing or resource facing service"
            },
            "description": {
              "type": "string",
              "description": "Free-text description of the service"
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the service ends"
            },
            "hasStarted": {
              "type": "boolean",
              "description": "If TRUE, this Service has already been started"
            },
            "isBundle": {
              "type": "boolean",
              "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
            },
            "isServiceEnabled": {
              "type": "boolean",
              "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed "
            },
            "isStateful": {
              "type": "boolean",
              "description": "If TRUE, this Service can be changed without affecting any other services"
            },
            "name": {
              "type": "string",
              "description": "Name of the service"
            },
            "serviceDate": {
              "type": "string",
              "description": "Date when the service was created (whatever its status)."
            },
            "serviceType": {
              "type": "string",
              "description": "Business type of the service"
            },
            "startDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the service starts"
            },
            "startMode": {
              "type": "string",
              "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above"
            },
            "feature": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feature"
              },
              "description": "A list of feature associated with this service "
            },
            "note": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              },
              "description": "A list of notes made on this service"
            },
            "place": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelatedPlaceRef"
              },
              "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place where the service is installed)"
            },
            "relatedParty": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelatedParty"
              },
              "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity"
            },
            "serviceCharacteristic": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Characteristic"
              },
              "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) "
            },
            "serviceOrderItem": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelatedOrderItem"
              },
              "description": "A list of service order items related to this service"
            },
            "serviceRelationship": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceRelationship"
              },
              "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory."
            },
            "serviceSpecification": {
              "$ref": "#/definitions/ServiceSpecificationRef",
              "description": "The specification from which this service was instantiated"
            },
            "state": {
              "$ref": "#/definitions/ServiceStateType",
              "description": "The life cycle state of the service, such as designed, reserved, active, etc..."
            },
            "supportingResource": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceRef"
              },
              "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources"
            },
            "supportingService": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceRef"
              },
              "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)"
            },
            "@baseType": {
              "type": "string",
              "description": "When sub-classing, this defines the super-class"
            },
            "@schemaLocation": {
              "type": "string",
              "format": "uri",
              "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
            },
            "@type": {
              "type": "string",
              "description": "When sub-classing, this defines the sub-class entity name"
            }
          },
          "definitions": {
            "Versionable": {
              "description": "Base schema for versionable entities",
              "type": "object",
              "properties": {
                "version": {
                  "description": "The version of the entity",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "EntityRef": {
              "description": "Entity reference schema to be use for all entityRef class.",
              "type": "object",
              "required": ["id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                }
              }
            },
            "Attachment": {
              "type": "object",
              "description": "Complements the description of an element (for instance a product) through video, pictures...",
              "required": ["@type"],
              "properties": {
                "id": {
                  "description": "unique identifier (UUID)",
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true,
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "readOnly": true,
                  "format": "uri"
                },
                "attachmentType": {
                  "type": "string",
                  "description": "Attachment type such as video, picture"
                },
                "content": {
                  "type": "string",
                  "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                  "type": "string",
                  "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                  "type": "string",
                  "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the attachment"
                },
                "url": {
                  "type": "string",
                  "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                  "$ref": "#/definitions/Quantity",
                  "description": "The size of the attachment."
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "AttachmentRef": {
              "type": "object",
              "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
              "required": ["@type", "id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "description": "A narrative text describing the content of the attachment"
                },
                "url": {
                  "type": "string",
                  "description": "Link to the attachment media/content"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "AttachmentRefOrValue": {
              "type": "object",
              "description": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.",
              "required": ["@type"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "description": "A narrative text describing the content of the attachment"
                },
                "url": {
                  "type": "string",
                  "description": "Link to the attachment media/content"
                },
                "attachmentType": {
                  "type": "string",
                  "description": "Attachment type such as video, picture"
                },
                "content": {
                  "type": "string",
                  "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "mimeType": {
                  "type": "string",
                  "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "size": {
                  "$ref": "#/definitions/Quantity",
                  "description": "The size of the attachment."
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "Characteristic": {
              "type": "object",
              "description": "Describes a given characteristic of an object or entity through a name/value pair.",
              "required": ["name", "value", "@type"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the characteristic"
                },
                "valueType": {
                  "type": "string",
                  "description": "Data type of the value of the characteristic"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the characteristic"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "Quantity": {
              "description": "An amount in a given unit",
              "type": "object",
              "properties": {
                "amount": {
                  "format": "float",
                  "description": "Numeric value in a given unit",
                  "default": 1,
                  "type": "number"
                },
                "units": {
                  "description": "Unit",
                  "type": "string"
                }
              }
            },
            "Money": {
              "type": "object",
              "description": "A base / value business entity used to represent money",
              "properties": {
                "unit": {
                  "type": "string",
                  "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                },
                "value": {
                  "type": "number",
                  "format": "float",
                  "description": "A signed floating point number, the meaning of the sign is according to the context of\nthe API that uses this Data type"
                }
              }
            },
            "TimePeriod": {
              "type": "object",
              "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
              "properties": {
                "endDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End of the time period, using IETC-RFC-3339 format",
                  "example": "1985-04-12T23:20:50.52Z"
                },
                "startDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start of the time period, using IETC-RFC-3339 format",
                  "example": "1985-04-12T23:20:50.52Z"
                }
              }
            },
            "RelatedParty": {
              "type": "object",
              "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
              "required": ["@type", "id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "description": "Role played by the related party"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "PartyOrPartyRole": {
              "type": "object",
              "description": "A Party or PartyRole reference.",
              "required": ["@type", "id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "PartyRef": {
              "description": "A Party reference",
              "type": "object",
              "required": ["@type", "id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "PartyRoleRef": {
              "description": "A PartyRole reference",
              "type": "object",
              "required": ["@type", "id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "PlaceRef": {
              "description": "A Place reference",
              "type": "object",
              "required": ["@type", "id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "RelatedPlaceRef": {
              "type": "object",
              "description": "Related Entity reference. A related place defines GeographicAddress or GeographicSite linked to a specific entity.",
              "required": ["@type", "id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "description": "Role played by the related place"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "ExternalReference": {
              "type": "object",
              "description": "External reference or reference in other system",
              "required": ["@type"],
              "properties": {
                "externalReferenceType": {
                  "type": "string",
                  "description": "Type of the external reference"
                },
                "name": {
                  "type": "string",
                  "description": "External reference name"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "Note": {
              "type": "object",
              "description": "Extra information about a given entity",
              "required": ["date", "author", "text"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier of the note within its containing entity (may or may not be globally unique, depending on provider implementation)"
                },
                "author": {
                  "type": "string",
                  "description": "Author of the note"
                },
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date of the note"
                },
                "text": {
                  "type": "string",
                  "description": "Text of the note"
                }
              }
            },
            "OrderItemActionType": {
              "type": "string",
              "description": "action to be performed on the product",
              "enum": ["add", "modify", "delete", "noChange"]
            },
            "RelatedOrderItem": {
              "description": "It's a Order item that has been executed previously.",
              "type": "object",
              "required": ["@type"],
              "properties": {
                "orderItemAction": {
                  "description": "Action of the order item for this entity",
                  "$ref": "#/definitions/OrderItemActionType"
                },
                "orderItemId": {
                  "description": "Identifier of the order item where the entity was managed",
                  "type": "string"
                },
                "orderHref": {
                  "description": "Reference of the related entity.",
                  "type": "string"
                },
                "orderId": {
                  "description": "Unique identifier of a related entity.",
                  "type": "string"
                },
                "role": {
                  "description": "role of the order item for this entity",
                  "type": "string"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "Feature": {
              "type": "object",
              "description": "Configuration feature.",
              "required": ["featureCharacteristic", "name", "id"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the feature."
                },
                "isBundle": {
                  "type": "boolean",
                  "description": "True if this is a feature group. Default is false."
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "True if this feature is enabled. Default is true."
                },
                "name": {
                  "type": "string",
                  "description": "This is the name for the feature."
                },
                "constraint": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConstraintRef"
                  },
                  "description": "This is a list of feature constraints."
                },
                "featureCharacteristic": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Characteristic"
                  },
                  "minItems": 1,
                  "description": "This is a list of Characteristics for a particular feature."
                },
                "featureRelationship": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FeatureRelationship"
                  }
                }
              }
            },
            "FeatureRelationship": {
              "type": "object",
              "description": "Configuration feature",
              "required": ["name", "relationshipType", "@type"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the target feature."
                },
                "name": {
                  "type": "string",
                  "description": "This is the name of the target feature."
                },
                "relationshipType": {
                  "type": "string",
                  "description": "This is the type of the feature relationship."
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period for which this feature relationship is valid."
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class entity name"
                }
              }
            },
            "ServiceStateType": {
              "type": "string",
              "description": "Valid values for the lifecycle state of the service",
              "enum": [
                "feasibilityChecked",
                "designed",
                "reserved",
                "inactive",
                "active",
                "terminated"
              ]
            },
            "ServiceSpecificationRef": {
              "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.",
              "required": ["id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                }
              }
            },
            "ServiceRef": {
              "description": "Service reference for when service is used by other entities. A service represents intangible entities.",
              "required": ["id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                }
              }
            },
            "ResourceRef": {
              "description": "Resource reference for when resource is used by other entities. A resource represents tangible entities.",
              "required": ["id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                }
              }
            },
            "ConstraintRef": {
              "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
              "required": ["id", "href"],
              "properties": {
                "id": {
                  "description": "Identifier of the referred entity.",
                  "type": "string",
                  "format": "uuid",
                  "example": "c73bcdcc-2669-4bf6-81d3-e4ae73fb11fd"
                },
                "href": {
                  "description": "Hyperlink reference",
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "description": "Name of the referred entity.",
                  "type": "string"
                },
                "@referredType": {
                  "description": "The actual type of the target instance when needed for disambiguation.",
                  "type": "string"
                }
              }
            },
            "ServiceRelationship": {
              "type": "object",
              "required": ["relationshipType", "service"],
              "properties": {
                "relationshipType": {
                  "type": "string"
                },
                "service": {
                  "$ref": "#/definitions/ServiceRef"
                },
                "serviceRelationshipCharacteristic": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Characteristic"
                  }
                }
              }
            }
          }
        }
