oryx:
  leanrepo:
    settings:
      groupId: 59b623a5-8cc5-457f-a843-113dc3287a52
      schemaName: productoffering
      schema: |
        {
          "$id": "https://oryx-gateway.net/schemas/ProductOffering",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ProductOffering",
          "type": "object",
          "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information.",
          "required": ["@type"],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier of the productOffering"
            },
            "href": {
              "type": "string",
              "description": "Reference of the ProductOffering"
            },
            "description": {
              "type": "string",
              "description": "Description of the productOffering"
            },
            "isBundle": {
              "type": "boolean",
              "description": "isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true)."
            },
            "isSellable": {
              "type": "boolean",
              "description": "A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle."
            },
            "lastUpdate": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time of the last update"
            },
            "lifecycleStatus": {
              "type": "string",
              "description": "Used to indicate the current lifecycle status"
            },
            "name": {
              "type": "string",
              "description": "Name of the productOffering"
            },
            "statusReason": {
              "type": "string",
              "description": "A string providing a complementary information on the value of the lifecycle status attribute."
            },
            "version": {
              "type": "string",
              "description": "ProductOffering version"
            },
            "agreement": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AgreementRef"
              },
              "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
            },
            "attachment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttachmentRefOrValue"
              },
              "description": "Complements the description of an element (for instance a product) through video, pictures..."
            },
            "bundledProductOffering": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BundledProductOffering"
              },
              "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering."
            },
            "category": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryRef"
              },
              "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates."
            },
            "channel": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRef"
              },
              "description": "The channel defines the channel for selling product offerings."
            },
            "marketSegment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketSegmentRef"
              },
              "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth."
            },
            "place": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlaceRef"
              },
              "description": "Place defines the places where the products are sold or delivered."
            },
            "prodSpecCharValueUse": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductSpecificationCharacteristicValueUse"
              },
              "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
            },
            "productOfferingPrice": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductOfferingPriceRefOrValue"
              },
              "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer."
            },
            "productOfferingRelationship": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductOfferingRelationship"
              },
              "description": "A relationship between this product offering and other product offerings."
            },
            "productOfferingTerm": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductOfferingTerm"
              },
              "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods."
            },
            "productSpecification": {
              "$ref": "#/definitions/ProductSpecificationRef",
              "description": "A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
            },
            "resourceCandidate": {
              "$ref": "#/definitions/ResourceCandidateRef",
              "description": "A resource candidate is an entity that makes a ResourceSpecification available to a catalog."
            },
            "serviceCandidate": {
              "$ref": "#/definitions/ServiceCandidateRef",
              "description": "ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog."
            },
            "serviceLevelAgreement": {
              "$ref": "#/definitions/SLARef",
              "description": "A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service."
            },
            "validFor": {
              "$ref": "#/definitions/TimePeriod",
              "description": "The period for which the productOffering is valid"
            },
            "@baseType": {
              "type": "string",
              "description": "When sub-classing, this defines the super-class"
            },
            "@schemaLocation": {
              "type": "string",
              "format": "uri",
              "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
            },
            "@type": {
              "type": "string",
              "description": "When sub-classing, this defines the sub-class Extensible name"
            }
          },
          "definitions": {
            "AgreementRef": {
              "type": "object",
              "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the agreement"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "AttachmentRefOrValue": {
              "type": "object",
              "description": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.",
              "properties": {
                "id": {
                  "example": "4aafacbd-11ff-4dc8-b445-305f2215715f",
                  "type": "string",
                  "description": "Unique identifier for this particular attachment"
                },
                "href": {
                  "example": "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f",
                  "type": "string",
                  "format": "uri",
                  "description": "URI for this Attachment"
                },
                "attachmentType": {
                  "example": "video",
                  "type": "string",
                  "description": "Attachment type such as video, picture"
                },
                "content": {
                  "type": "string",
                  "format": "base64",
                  "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                  "example": "Photograph of the Product",
                  "type": "string",
                  "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                  "type": "string",
                  "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the attachment"
                },
                "url": {
                  "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f",
                  "type": "string",
                  "format": "uri",
                  "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                  "$ref": "#/definitions/Quantity",
                  "description": "The size of the attachment."
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              }
            },
            "BundledProductOffering": {
              "type": "object",
              "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the BundledProductOffering"
                },
                "href": {
                  "type": "string",
                  "description": "Unique reference of the BundledProductOffering"
                },
                "lifecycleStatus": {
                  "type": "string",
                  "description": "Used to indicate the current lifecycle status"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the BundledProductOffering"
                },
                "bundledProductOfferingOption": {
                  "$ref": "#/definitions/BundledProductOfferingOption",
                  "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded."
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                }
              }
            },
            "CategoryRef": {
              "type": "object",
              "description": "The category for grouping recommendations",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the related entity."
                },
                "version": {
                  "type": "string",
                  "description": "Category version"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "ChannelRef": {
              "type": "object",
              "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the channel."
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "MarketSegmentRef": {
              "type": "object",
              "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the market segment"
                },
                "href": {
                  "type": "string",
                  "description": "Reference of the market segment"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the market segment"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "(Class) type of the referred market segment"
                }
              },
              "required": ["id"]
            },
            "PlaceRef": {
              "type": "object",
              "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the related entity."
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "ProductSpecificationCharacteristicValueUse": {
              "type": "object",
              "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique ID for the characteristic"
                },
                "description": {
                  "type": "string",
                  "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
                },
                "maxCardinality": {
                  "type": "integer",
                  "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                },
                "minCardinality": {
                  "type": "integer",
                  "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the associated productSpecificationCharacteristic"
                },
                "valueType": {
                  "type": "string",
                  "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                },
                "productSpecCharacteristicValue": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CharacteristicValueSpecification"
                  },
                  "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic."
                },
                "productSpecification": {
                  "$ref": "#/definitions/ProductSpecificationRef",
                  "description": "A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period for which the productSpecificationCharacteristic is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                }
              }
            },
            "ProductOfferingPriceRefOrValue": {
              "type": "object",
              "description": "A new product offering price being created by value or a reference to an existing product offering price that alreasy created. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product offering price and not to this ReforValue structure",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the productOfferingPrice"
                },
                "lastUpdate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "the last update time of this ProductOfferingPrice"
                },
                "lifecycleStatus": {
                  "type": "string",
                  "description": "the lifecycle status of this ProductOfferingPrice"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the productOfferingPrice"
                },
                "priceType": {
                  "type": "string",
                  "description": "A category that describes the price charge, such as recurring, penalty, One time fee and so forth."
                },
                "recurringChargePeriod": {
                  "type": "string",
                  "description": "The period type to repeat the application of the price\nCould be month, week..."
                },
                "recurringChargePeriodLength": {
                  "type": "integer",
                  "description": "the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable"
                },
                "version": {
                  "type": "string",
                  "description": "ProductOffering version"
                },
                "constraint": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConstraintRef"
                  },
                  "description": "The Constraint resource represents a policy/rule applied to ProductOfferingPrice."
                },
                "price": {
                  "$ref": "#/definitions/ProductPriceValue"
                },
                "priceAlteration": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/POPAlteration"
                  }
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/Quantity",
                  "description": "A number and unit representing denominator of a rate. For example, for a data charge rate of $2 per 5 GB usage, the amount of unitOfMeasure will be 5 with units as GB."
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period for which the productOfferingPrice is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              }
            },
            "ProductOfferingRelationship": {
              "type": "object",
              "description": "A relationship between two product Offerings.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the related entity."
                },
                "relationshipType": {
                  "type": "string",
                  "description": "Type of relationship between product offerings such as requires, exchangableTo, optionalFor"
                },
                "role": {
                  "type": "string",
                  "description": "The association role for the source product offering"
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period for which the Relationship is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              }
            },
            "ProductOfferingTerm": {
              "type": "object",
              "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods.",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Description of the productOfferingTerm"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the productOfferingTerm"
                },
                "duration": {
                  "$ref": "#/definitions/Duration",
                  "description": "Duration of the productOfferingTerm"
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period for which the productOfferingTerm is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                }
              }
            },
            "ProductSpecificationRef": {
              "type": "object",
              "description": "Product specification reference: A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the related entity."
                },
                "version": {
                  "type": "string",
                  "description": "Version of the product specification"
                },
                "targetProductSchema": {
                  "$ref": "#/definitions/TargetProductSchema",
                  "description": "A target product schema reference. The reference object to the schema and type of target product which is described by product specification."
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "ResourceCandidateRef": {
              "type": "object",
              "description": "ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the related entity."
                },
                "version": {
                  "type": "string",
                  "description": "the version of resource candidate"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "ServiceCandidateRef": {
              "type": "object",
              "description": "ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the related entity."
                },
                "version": {
                  "type": "string",
                  "description": "Version of the service candidate"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "SLARef": {
              "type": "object",
              "description": "ServiceLevelAgreement reference: A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of service level agreement"
                },
                "href": {
                  "type": "string",
                  "description": "Reference of the service level agreement"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the service level agreement"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "TimePeriod": {
              "type": "object",
              "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
              "properties": {
                "endDateTime": {
                  "example": "1985-04-12T23:20:50.52Z",
                  "type": "string",
                  "format": "date-time",
                  "description": "End of the time period, using IETC-RFC-3339 format"
                },
                "startDateTime": {
                  "example": "1985-04-12T23:20:50.52Z",
                  "type": "string",
                  "format": "date-time",
                  "description": "Start of the time period, using IETC-RFC-3339 format"
                }
              }
            },
            "BundledProductOfferingOption": {
              "type": "object",
              "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded",
              "properties": {
                "numberRelOfferDefault": {
                  "type": "integer",
                  "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
                },
                "numberRelOfferLowerLimit": {
                  "type": "integer",
                  "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
                },
                "numberRelOfferUpperLimit": {
                  "type": "integer",
                  "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                }
              }
            },
            "CharacteristicValueSpecification": {
              "type": "object",
              "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic.",
              "properties": {
                "isDefault": {
                  "type": "boolean",
                  "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                },
                "rangeInterval": {
                  "type": "string",
                  "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                },
                "regex": {
                  "type": "string",
                  "description": "A regular expression constraint for given value"
                },
                "unitOfMeasure": {
                  "type": "string",
                  "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                },
                "valueFrom": {
                  "type": "integer",
                  "description": "The low range value that a characteristic can take on"
                },
                "valueTo": {
                  "type": "integer",
                  "description": "The upper range value that a characteristic can take on"
                },
                "valueType": {
                  "type": "string",
                  "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period of time for which a value is applicable."
                },
                "value": {
                  "type": "string",
                  "description": "A discrete value that the characteristic can take on, or the actual value of the characteristic"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                }
              }
            },
            "ConstraintRef": {
              "type": "object",
              "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the related entity."
                },
                "version": {
                  "type": "string",
                  "description": "constraint version"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                  "type": "string",
                  "description": "The actual type of the target instance when needed for disambiguation."
                }
              },
              "required": ["id"]
            },
            "ProductPriceValue": {
              "type": "object",
              "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration.",
              "properties": {
                "percentage": {
                  "type": "number",
                  "format": "float",
                  "description": "Percentage to apply for ProdOfferPriceAlteration"
                },
                "taxCategory": {
                  "type": "string",
                  "description": "Tax category"
                },
                "taxRate": {
                  "type": "number",
                  "format": "float",
                  "description": "Tax rate"
                },
                "dutyFreeAmount": {
                  "$ref": "#/definitions/Money",
                  "description": "All taxes excluded amount (expressed in the given currency)"
                },
                "taxIncludedAmount": {
                  "$ref": "#/definitions/Money",
                  "description": "All taxes included amount (expressed in the given currency)"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                }
              }
            },
            "POPAlteration": {
              "type": "object",
              "description": "Is an amount, usually of money, that modifies the price charged for an order item.",
              "required": ["price", "priceType"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "description": "Hyperlink reference"
                },
                "description": {
                  "type": "string",
                  "description": "A narrative that explains in detail the semantics of this order item price alteration"
                },
                "name": {
                  "type": "string",
                  "description": "Name given to this price alteration"
                },
                "priceType": {
                  "type": "string",
                  "description": "A category that describes the price such as recurring, one time and usage."
                },
                "priority": {
                  "type": "integer",
                  "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                },
                "recurringChargePeriod": {
                  "type": "string",
                  "description": "Could be month, week..."
                },
                "applicationDuration": {
                  "$ref": "#/definitions/Duration",
                  "description": "The period for which the productOfferingPriceAlteration is applicable"
                },
                "price": {
                  "$ref": "#/definitions/ProductPriceValue"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/Quantity",
                  "description": "A number and unit representing denominator of an alteration rate. For example, for a data discount rate of $1 per 20 GB usage, the amount of unitOfMeasure will be 20 with units as GB."
                },
                "validFor": {
                  "$ref": "#/definitions/TimePeriod",
                  "description": "The period for which this productOfferingPriceAlteration is valid"
                },
                "@baseType": {
                  "type": "string",
                  "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                  "type": "string",
                  "description": "When sub-classing, this defines the sub-class Extensible name"
                }
              }
            },
            "Quantity": {
              "type": "object",
              "description": "An amount in a given unit",
              "properties": {
                "amount": {
                  "default": 1,
                  "type": "number",
                  "format": "float",
                  "description": "Numeric value in a given unit"
                },
                "units": {
                  "type": "string",
                  "description": "Unit"
                }
              }
            },
            "Duration": {
              "type": "object",
              "description": "A time interval in a given unit of time",
              "properties": {
                "amount": {
                  "type": "integer",
                  "description": "Time interval (number of seconds, minutes, hours, etc.)"
                },
                "units": {
                  "type": "string",
                  "description": "Unit of time (seconds, minutes, hours, etc.)"
                }
              }
            },
            "TargetProductSchema": {
              "type": "object",
              "description": "The reference object to the schema and type of target product which is described by product specification",
              "required": ["@schemaLocation", "@type"],
              "properties": {
                "@schemaLocation": {
                  "type": "string",
                  "format": "uri",
                  "description": "This field provides a link to the schema describing the target product"
                },
                "@type": {
                  "type": "string",
                  "description": "Class type of the target product"
                }
              }
            },
            "Money": {
              "type": "object",
              "description": "A base / value business entity used to represent money",
              "properties": {
                "unit": {
                  "type": "string",
                  "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                },
                "value": {
                  "type": "number",
                  "format": "float",
                  "description": "A positive floating point number"
                }
              }
            }
          }
        }
