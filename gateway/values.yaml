global:
  imagePullPolicy: "IfNotPresent"
  imagePullSecrets: []
  podAnnotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

oda:
  enabled: true

ingress: 
  enabled: true

dependencies:
  broker: 
    kafka: true
  schemaregistry:
    confluent: false
    apicurio: true
  flink: true

oryx:
  settings:
    schemaRegistry:
      vendor: "apicurio"
      env: 
        SCHEMA_REGISTRY_URL: "http://gateway-apicurio-registry:8080/apis/registry/v2/"
    decorator: "none"
    namingStrategy: "suffixed_name"
    topics:
      topic: "TMF688.topic.notification"
      hub: "TMF688.hub.notification"
    flink:
      url: "http://gateway-gateway-flink-rest:8081"
    brokerProperties: |
      bootstrap.servers=http://gateway-kafka:9092
    imagePullSecrets:
      - "gateway-registry"
  gateway:
    enabled: true
    type: eventmanagement
    name: gateway
    image: oryxgateway/gateway:3.0.0
    replicas: 1
    updateStrategy: "RollingUpdate"
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1000m
        memory: 2Gi
    podAnnotations: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
  gatewayInit:
    name: "gateway-init"
    image: oryxgateway/gateway-init:3.0.0
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 4Gi
  operator:
    enabled: false
    name: "gateway-operator"
    image: oryxgateway/gateway-operator:3.0.0
    updateStrategy: "RollingUpdate"
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 200m
        memory: 500Mi
    podAnnotations: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

kafka:
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
    external:
      protocol: PLAINTEXT
  controller:
    replicaCount: 0
  broker:
    replicaCount: 3
    extraEnvVars: 
      - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
        value: "false"
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 30
    resources:
      requests:
        memory: 512Mi
        cpu: 500m
      limits:
        memory: 1Gi
        cpu: 1000m
  kraft:
    enabled: false
  zookeeper:
    enabled: true
    replicaCount: 3 
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m

cp-helm-charts:
  cp-zookeeper:
    enabled: false
  cp-kafka:
    enabled: false
  cp-schema-registry:
    enabled: true
  cp-kafka-rest:
    enabled: false
  cp-kafka-connect:
    enabled: false
  cp-ksql-server:
    enabled: false
  cp-control-center:
    enabled: false

apicurio-registry:
  registry:
    enabled: true
    kafka:
      bootstrapServers: gateway-kafka:9092
    resources:
      requests:
        memory: 256Mi
        cpu: 200m
      limits:
        memory: 512Mi
        cpu: 500m

kafka-ui:
  yamlApplicationConfig:
    kafka:
      clusters:
        - name: broker
          bootstrapServers: gateway-kafka:9092
    auth:
      type: disabled
    management:
      health:
        ldap:
          enabled: false